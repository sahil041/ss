4 - Bit Adder

Verilog Code for Full Adder ( .v file)

module full_adder( A,B,C0,S,C4);
input A,B,C0;
output S,C4;
assign S = A^B^C0;
assign C4 = (A&B) | (C0&(A^B));
endmodule


Verilog Code for 4 bit Parallel Adder( .v file)

module fa_bit4(A,B,C0,S,C4);
input [3:0]A;
input [3:0]B;
input C0;
output [3:0]S ; 
output C4;
wire C1,C2,C3;
full_adder fa0 (A[0],B[0],C0,S[0],C1);
full_adder fa1 (A[1],B[1],C1,S[1],C2);
full_adder fa2 (A[2],B[2],C2,S[2],C3);
full_adder fa3 (A[3],B[3],C3,S[3],C4);
endmodule


Test Bench ( .v file)

module test_4_bit;
reg [3:0] A;
reg [3:0] B;
reg C0;
wire [3:0] S;
wire C4;
fa_bit4 g1(A,B,C0,S,C4);
initial begin
A = 4'b0011;B=4'b0011;C0 = 1'b0; #10;
A = 4'b1011;B=4'b0111;C0 = 1'b1; #10;
A = 4'b1111;B=4'b1111;C0 = 1'b1; #10;
end
initial
#50 $finish;
endmodule


Constraint (.sdc file)

set_input_delay -max 0.5 [all_inputs]
set_output_delay -max 0.5 [all_outputs]
set_input_transition 0.1 [all_inputs]
set_max_capacitance 20 [get_ports]
set_load 0.10 [all_outputs]
set_max_fanout 20.00 [current_design]


Script (.tcl file)

set_db lib_search_path {/home/install/FOUNDRY/digital/45nm/dig/lib/}
set_db hdl_search_path {./}
set_db library "slow.lib"
set_db lef_library {/home/install/FOUNDRY/digital/45nm/dig/lef/gsclib045_tech.lef 
/home/install/FOUNDRY/digital/45nm/dig/lef/gsclib045_macro.lef}
read_hdl fa_4bit.v
elaborate
read_sdc constraint.sdc
set_db syn_generic_effort medium
set_db syn_map_effort medium
set_db syn_opt_effort medium
syn_generic
syn_map
syn_opt
write_hdl > adder_netlist.v
write_sdc > adder_sdc.sdc
report_power > adder_power.rpt
report_area > adder_area.rpt
report_gates > adder_gates.rpt
report_timing -unconstrained > adder_timing.rpt
gui_show